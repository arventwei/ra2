@startuml
enum OrderType {
    SyncHash= 0x65,
    Disconnect= 0xBF,
    Handshake= 0xFE,
    Fields= 0xFF,
}
enum OrderFields {
    None= 0x0,
    Target= 0x01,
    ExtraActors= 0x02,
    TargetString= 0x04,
    Queued= 0x08,
    ExtraLocation= 0x10,
    ExtraData= 0x20,
    TargetIsCell= 0x40,
    Subject= 0x80,
    Grouped= 0x100,
}
class OrderFieldsExts <<static>> {
    + {static} HasField(of:OrderFields, f:OrderFields) : bool
}
class Order <<sealed>> {
    + <<const>> SyncHashOrderLength : int = 13
    + <<readonly>> OrderString : string
    + <<readonly>> Queued : bool
    + TargetString : string
    + ExtraData : uint
    + IsImmediate : bool
    + SuppressVisualFeedback : bool
    Order(orderString:string, subject:Actor, target:Target, targetString:string, queued:bool, extraActors:Actor[], extraLocation:CPos, extraData:uint, groupedActors:Actor[])
    + {static} Deserialize(world:World, r:BinaryReader) : Order
    {static} UIntFromActor(a:Actor) : uint
    {static} TryGetActorFromUInt(world:World, aID:uint, ret:Actor) : bool
    + {static} Chat(text:string, teamNumber:uint) : Order
    + {static} FromTargetString(order:string, targetString:string, isImmediate:bool) : Order
    + {static} FromGroupedOrder(grouped:Order, subject:Actor) : Order
    + {static} Command(text:string) : Order
    + {static} StartProduction(subject:Actor, item:string, count:int, queued:bool) : Order
    + {static} PauseProduction(subject:Actor, item:string, pause:bool) : Order
    + {static} CancelProduction(subject:Actor, item:string, count:int) : Order
    + Order()
    + Order(orderString:string, subject:Actor, queued:bool, extraActors:Actor[], groupedActors:Actor[])
    + Order(orderString:string, subject:Actor, target:Target, queued:bool, extraActors:Actor[], groupedActors:Actor[])
    + Order(orderString:string, subject:Actor, target:Target, visualFeedbackTarget:Target, queued:bool)
    + Serialize() : byte[]
    + <<override>> ToString() : string
}
Order --> "Subject" Actor
Order --> "ExtraLocation" CPos
Order o-> "Type" OrderType
Order --> "Player" Player
Order --> "target" Target
Order --> "visualFeedbackTarget" Target
@enduml
