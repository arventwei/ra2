@startuml
class WithProductionOverlayInfo {
    + <<readonly>> Sequence : string = "production-overlay"
    + <<readonly>> Palette : string = null
    + <<readonly>> IsPlayerPalette : bool = false
    + <<override>> Create(init:ActorInitializer) : object
}
class WithProductionOverlay {
    IsProducing : bool <<get>>
    + WithProductionOverlay(self:Actor, info:WithProductionOverlayInfo)
    CacheQueues(self:Actor) : void
    OnOwnerChanged(self:Actor, oldOwner:Player, newOwner:Player) : void
    DamageStateChanged(self:Actor, e:AttackInfo) : void
}
class "Requires`1"<T> {
}
class "HashSet`1"<T> {
}
class "PausableConditionalTrait`1"<T> {
}
PausableConditionalTraitInfo <|-- WithProductionOverlayInfo
"Requires`1" "<RenderSpritesInfo>" <|-- WithProductionOverlayInfo
"Requires`1" "<BodyOrientationInfo>" <|-- WithProductionOverlayInfo
"Requires`1" "<ProductionInfo>" <|-- WithProductionOverlayInfo
WithProductionOverlayInfo o-> "Queues<string>" "HashSet`1"
WithProductionOverlayInfo o-> "Offset" WVec
"PausableConditionalTrait`1" "<WithProductionOverlayInfo>" <|-- WithProductionOverlay
INotifyDamageStateChanged <|-- WithProductionOverlay
INotifyCreated <|-- WithProductionOverlay
INotifyOwnerChanged <|-- WithProductionOverlay
WithProductionOverlay --> "overlay" Animation
@enduml
