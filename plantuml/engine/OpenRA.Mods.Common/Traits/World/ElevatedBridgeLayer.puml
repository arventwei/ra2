@startuml
class ElevatedBridgeLayerInfo {
    + <<readonly>> ImpassableTerrainType : string = "Impassable"
    + <<override>> Create(init:ActorInitializer) : object
}
class ElevatedBridgeLayer {
    enabled : bool
    + ElevatedBridgeLayer(self:Actor, info:ElevatedBridgeLayerInfo)
    + WorldLoaded(world:World, wr:WorldRenderer) : void
    EnabledForActor(a:ActorInfo, li:LocomotorInfo) : bool
    Index : byte <<get>>
    InteractsWithDefaultLayer : bool <<get>>
    ReturnToGroundLayerOnIdle : bool <<get>>
    CenterOfCell(cell:CPos) : WPos
    EntryMovementCost(a:ActorInfo, li:LocomotorInfo, cell:CPos) : int
    ExitMovementCost(a:ActorInfo, li:LocomotorInfo, cell:CPos) : int
    GetTerrainIndex(cell:CPos) : byte
}
class "Requires`1"<T> {
}
class "CellLayer`1"<T> {
}
class "HashSet`1"<T> {
}
TraitInfo <|-- ElevatedBridgeLayerInfo
"Requires`1" "<DomainIndexInfo>" <|-- ElevatedBridgeLayerInfo
ILobbyCustomRulesIgnore <|-- ElevatedBridgeLayerInfo
ICustomMovementLayer <|-- ElevatedBridgeLayer
IWorldLoaded <|-- ElevatedBridgeLayer
ElevatedBridgeLayer --> "map" Map
ElevatedBridgeLayer --> "cellCenters<WPos>" "CellLayer`1"
ElevatedBridgeLayer --> "terrainIndices<byte>" "CellLayer`1"
ElevatedBridgeLayer o-> "ends<CPos>" "HashSet`1"
@enduml
