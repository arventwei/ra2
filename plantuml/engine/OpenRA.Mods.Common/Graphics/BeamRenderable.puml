@startuml
enum BeamRenderableShape {
    Cylindrical,
    Flat,
}
class BeamRenderable <<struct>> {
    <<readonly>> zOffset : int
    + BeamRenderable(pos:WPos, zOffset:int, length:WVec, shape:BeamRenderableShape, width:WDist, color:Color)
    + ZOffset : int <<get>>
    + IsDecoration : bool <<get>>
    + WithPalette(newPalette:PaletteReference) : IRenderable
    + WithZOffset(newOffset:int) : IRenderable
    + OffsetBy(vec:WVec) : IRenderable
    + AsDecoration() : IRenderable
    + PrepareRender(wr:WorldRenderer) : IFinalizedRenderable
    + Render(wr:WorldRenderer) : void
    + RenderDebugGeometry(wr:WorldRenderer) : void
    + ScreenBounds(wr:WorldRenderer) : Rectangle
}
IRenderable <|-- BeamRenderable
IFinalizedRenderable <|-- BeamRenderable
BeamRenderable --> "pos" WPos
BeamRenderable --> "length" WVec
BeamRenderable --> "shape" BeamRenderableShape
BeamRenderable --> "width" WDist
BeamRenderable --> "color" Color
BeamRenderable --> "Pos" WPos
BeamRenderable --> "Palette" PaletteReference
@enduml
